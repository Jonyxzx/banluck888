{"ast":null,"code":"import { shuffleDeck, initialiseGame, dealCards, calculateHandValue, determineWinner } from './logic';\nconst fs = require('fs');\nconst mockDeck = JSON.parse(fs.readFileSync('cards.json', 'utf-8'));\nfunction testShuffleDeck() {\n  const shuffledDeck = shuffleDeck(mockDeck);\n\n  // Check if the number of keys is the same\n  assert.strictEqual(Object.keys(shuffledDeck).length, Object.keys(mockDeck).length);\n\n  // Check if the values are the same (not a deep comparison, just a reference check)\n  assert.notStrictEqual(shuffledDeck, mockDeck);\n\n  // Check if the keys are shuffled\n  const originalKeys = Object.keys(mockDeck);\n  const shuffledKeys = Object.keys(shuffledDeck);\n  assert.notStrictEqual(originalKeys.join(','), shuffledKeys.join(','));\n  console.log('All tests passed!');\n}\ntestShuffleDeck();\nexport default testShuffleDeck;","map":{"version":3,"names":["shuffleDeck","initialiseGame","dealCards","calculateHandValue","determineWinner","fs","require","mockDeck","JSON","parse","readFileSync","testShuffleDeck","shuffledDeck","assert","strictEqual","Object","keys","length","notStrictEqual","originalKeys","shuffledKeys","join","console","log"],"sources":["/Users/carlintan/Desktop/banluck888/src/logic/logic_test.js"],"sourcesContent":["import {shuffleDeck, initialiseGame, dealCards, calculateHandValue, determineWinner} from './logic';\n\nconst fs = require('fs');\nconst mockDeck = JSON.parse(fs.readFileSync('cards.json', 'utf-8'));\n\nfunction testShuffleDeck() {\n    const shuffledDeck = shuffleDeck(mockDeck);\n\n    // Check if the number of keys is the same\n    assert.strictEqual(Object.keys(shuffledDeck).length, Object.keys(mockDeck).length);\n\n    // Check if the values are the same (not a deep comparison, just a reference check)\n    assert.notStrictEqual(shuffledDeck, mockDeck);\n\n    // Check if the keys are shuffled\n    const originalKeys = Object.keys(mockDeck);\n    const shuffledKeys = Object.keys(shuffledDeck);\n    assert.notStrictEqual(originalKeys.join(','), shuffledKeys.join(','));\n\n    console.log('All tests passed!');\n}\n\ntestShuffleDeck()\n\nexport default testShuffleDeck;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,cAAc,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,eAAe,QAAO,SAAS;AAEnG,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,EAAE,CAACK,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;AAEnE,SAASC,eAAeA,CAAA,EAAG;EACvB,MAAMC,YAAY,GAAGZ,WAAW,CAACO,QAAQ,CAAC;;EAE1C;EACAM,MAAM,CAACC,WAAW,CAACC,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC,CAACK,MAAM,EAAEF,MAAM,CAACC,IAAI,CAACT,QAAQ,CAAC,CAACU,MAAM,CAAC;;EAElF;EACAJ,MAAM,CAACK,cAAc,CAACN,YAAY,EAAEL,QAAQ,CAAC;;EAE7C;EACA,MAAMY,YAAY,GAAGJ,MAAM,CAACC,IAAI,CAACT,QAAQ,CAAC;EAC1C,MAAMa,YAAY,GAAGL,MAAM,CAACC,IAAI,CAACJ,YAAY,CAAC;EAC9CC,MAAM,CAACK,cAAc,CAACC,YAAY,CAACE,IAAI,CAAC,GAAG,CAAC,EAAED,YAAY,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;EAErEC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;AACpC;AAEAZ,eAAe,CAAC,CAAC;AAEjB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}