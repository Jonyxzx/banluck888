{"ast":null,"code":"import { getAuth, createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { ref, get, set, update } from 'firebase/database';\nimport { db } from \"../backend/firebase\";\nimport { useEffect } from 'react';\n\n// For new sign-ups and updating of balance\nconst writeEmployeeData = async (email, balance, deck, isNew) => {\n  const auth = getAuth();\n  try {\n    if (isNew) {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    }\n    const user = await readCurrentUserData();\n    const dataLocation = \"employees\";\n    const reference = ref(db, `${dataLocation}/${user}/`);\n    const snapshot = await get(reference);\n    if (snapshot.exists() && isNew) {\n      console.log(\"Invalid id: id already exists in Employee Data\");\n      // You can handle this case as needed, e.g., throw an error\n      throw new Error(\"Invalid id: id already exists in Employee Data\");\n    } else {\n      if (isNew) {\n        await set(ref(db, `${dataLocation}/${user}/`), {\n          name,\n          email,\n          gender,\n          education,\n          position,\n          performance,\n          skillsReview,\n          id,\n          // Set a default value of 0 for a property (e.g., points)\n          points: 0,\n          isAdmin: isAdmin\n        });\n      } else {\n        // We update instead\n        update(ref(db, `employees/${user}/`), {\n          name,\n          email,\n          gender,\n          education,\n          position,\n          performance,\n          skillsReview,\n          id,\n          isAdmin\n        });\n      }\n      writeSkillsData(user, communication_score, creativity_score, problem_solving_score, teamwork_score, time_management_score);\n      // feedback not written by employer\n      // writeFeedbackData(user, feedback);\n      return user; // Return user.uid on success\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      console.log(\"Error:\", error.message);\n    }\n    // Handle the error as needed\n    throw error;\n  }\n};\nexport default {\n  writePlayerData,\n  readCurrentUserData\n};","map":{"version":3,"names":["getAuth","createUserWithEmailAndPassword","onAuthStateChanged","ref","get","set","update","db","useEffect","writeEmployeeData","email","balance","deck","isNew","auth","userCredential","password","user","readCurrentUserData","dataLocation","reference","snapshot","exists","console","log","Error","name","gender","education","position","performance","skillsReview","id","points","isAdmin","writeSkillsData","communication_score","creativity_score","problem_solving_score","teamwork_score","time_management_score","error","message","writePlayerData"],"sources":["/Users/carlintan/Desktop/banluck888/src/backend/command.js"],"sourcesContent":["import { getAuth, createUserWithEmailAndPassword, onAuthStateChanged } from 'firebase/auth';\nimport { ref, get, set, update } from 'firebase/database';\nimport { db } from \"../backend/firebase\";\nimport { useEffect } from 'react';\n\n// For new sign-ups and updating of balance\nconst writeEmployeeData = async (\n    email,\n    balance,\n    deck,\n    isNew\n  ): Promise<any> => {\n    const auth = getAuth();\n  \n    try {\n      if (isNew) {\n        const userCredential = await createUserWithEmailAndPassword(\n          auth,\n          email,\n          password\n        );\n      }\n  \n      const user = await readCurrentUserData();\n  \n      const dataLocation = \"employees\";\n      const reference = ref(db, `${dataLocation}/${user}/`);\n  \n      const snapshot = await get(reference);\n  \n      if (snapshot.exists() && isNew) {\n        console.log(\"Invalid id: id already exists in Employee Data\");\n        // You can handle this case as needed, e.g., throw an error\n        throw new Error(\"Invalid id: id already exists in Employee Data\");\n      } else {\n        if (isNew) {\n          await set(ref(db, `${dataLocation}/${user}/`), {\n            name,\n            email,\n            gender,\n            education,\n            position,\n            performance,\n            skillsReview,\n            id,\n            // Set a default value of 0 for a property (e.g., points)\n            points: 0,\n            isAdmin: isAdmin\n          });\n        } else {\n          // We update instead\n          update(ref(db, `employees/${user}/`), {\n            name,\n            email,\n            gender,\n            education,\n            position,\n            performance,\n            skillsReview,\n            id,\n            isAdmin\n          });\n        }\n  \n        writeSkillsData(user, communication_score, creativity_score, problem_solving_score, teamwork_score, time_management_score);\n        // feedback not written by employer\n        // writeFeedbackData(user, feedback);\n        return user; // Return user.uid on success\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        console.log(\"Error:\", error.message);\n      }\n      // Handle the error as needed\n      throw error;\n    }\n  };\n\nexport default {\n    writePlayerData,\n    readCurrentUserData\n};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,8BAA8B,EAAEC,kBAAkB,QAAQ,eAAe;AAC3F,SAASC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAQ,mBAAmB;AACzD,SAASC,EAAE,QAAQ,qBAAqB;AACxC,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA,MAAMC,iBAAiB,GAAG,MAAAA,CACtBC,KAAK,EACLC,OAAO,EACPC,IAAI,EACJC,KAAK,KACY;EACjB,MAAMC,IAAI,GAAGd,OAAO,CAAC,CAAC;EAEtB,IAAI;IACF,IAAIa,KAAK,EAAE;MACT,MAAME,cAAc,GAAG,MAAMd,8BAA8B,CACzDa,IAAI,EACJJ,KAAK,EACLM,QACF,CAAC;IACH;IAEA,MAAMC,IAAI,GAAG,MAAMC,mBAAmB,CAAC,CAAC;IAExC,MAAMC,YAAY,GAAG,WAAW;IAChC,MAAMC,SAAS,GAAGjB,GAAG,CAACI,EAAE,EAAG,GAAEY,YAAa,IAAGF,IAAK,GAAE,CAAC;IAErD,MAAMI,QAAQ,GAAG,MAAMjB,GAAG,CAACgB,SAAS,CAAC;IAErC,IAAIC,QAAQ,CAACC,MAAM,CAAC,CAAC,IAAIT,KAAK,EAAE;MAC9BU,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC7D;MACA,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;IACnE,CAAC,MAAM;MACL,IAAIZ,KAAK,EAAE;QACT,MAAMR,GAAG,CAACF,GAAG,CAACI,EAAE,EAAG,GAAEY,YAAa,IAAGF,IAAK,GAAE,CAAC,EAAE;UAC7CS,IAAI;UACJhB,KAAK;UACLiB,MAAM;UACNC,SAAS;UACTC,QAAQ;UACRC,WAAW;UACXC,YAAY;UACZC,EAAE;UACF;UACAC,MAAM,EAAE,CAAC;UACTC,OAAO,EAAEA;QACX,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACA5B,MAAM,CAACH,GAAG,CAACI,EAAE,EAAG,aAAYU,IAAK,GAAE,CAAC,EAAE;UACpCS,IAAI;UACJhB,KAAK;UACLiB,MAAM;UACNC,SAAS;UACTC,QAAQ;UACRC,WAAW;UACXC,YAAY;UACZC,EAAE;UACFE;QACF,CAAC,CAAC;MACJ;MAEAC,eAAe,CAAClB,IAAI,EAAEmB,mBAAmB,EAAEC,gBAAgB,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,qBAAqB,CAAC;MAC1H;MACA;MACA,OAAOvB,IAAI,CAAC,CAAC;IACf;EACF,CAAC,CAAC,OAAOwB,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYhB,KAAK,EAAE;MAC1BF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEiB,KAAK,CAACC,OAAO,CAAC;IACtC;IACA;IACA,MAAMD,KAAK;EACb;AACF,CAAC;AAEH,eAAe;EACXE,eAAe;EACfzB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}